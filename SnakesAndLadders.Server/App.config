<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="entityFramework"
				 type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				 requirePermission="false" />
		<section name="log4net"
				 type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>

	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
	</startup>

	<!-- Log4Net -->
	<log4net>
		<appender name="ServerRollingFile" type="log4net.Appender.RollingFileAppender">
			<file type="log4net.Util.PatternString" value="%property{LogFileName}" />
			<appendToFile value="true" />
			<rollingStyle value="Date" />
			<datePattern value="'.'yyyy-MM-dd'.log'" />
			<staticLogFileName value="true" />
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date %-5level [%thread] %logger - %message%newline%exception" />
			</layout>
		</appender>
		<root>
			<level value="Info" />
			<appender-ref ref="ServerRollingFile" />
		</root>
	</log4net>

	<!-- EF -->
	<connectionStrings>
		<add name="SnakeAndLaddersDBEntities1"
			 providerName="System.Data.EntityClient"
			 connectionString="metadata=res://*/DataBase.csdl|res://*/DataBase.ssdl|res://*/DataBase.msl;provider=System.Data.SqlClient;provider connection string='Data Source=(local);Initial Catalog=SnakeAndLaddersDB;Integrated Security=True;MultipleActiveResultSets=True;Encrypt=False;TrustServerCertificate=True;App=EntityFramework'"/>
	</connectionStrings>

	<!-- AppSettings -->
	<appSettings>
		<add key="Smtp:Host" value="smtp.gmail.com"/>
		<add key="Smtp:Port" value="587"/>
		<add key="Smtp:EnableSsl" value="true"/>
		<add key="Smtp:User" value="snakesandladdersp@gmail.com"/>
		<add key="Smtp:Pass" value="wthl woxh zpzx nhfm"/>
		<add key="Smtp:From" value="snakesandladdersp@gmail.com"/>
		<add key="Smtp:FromName" value="Snakes &amp; Ladders"/>
		<!-- carpeta (no archivo) -->
		<add key="ChatFilePath" value="%LOCALAPPDATA%\SnakesAndLadders\Chat\"/>
	</appSettings>

	<!-- WCF -->
	<system.serviceModel>
		<behaviors>
			<serviceBehaviors>
				<!-- Para servicios con HTTP (Auth/User/Lobby/Chat) -->
				<behavior name="ServiceBehaviorHttp">
					<serviceMetadata httpGetEnabled="true" />
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceThrottling maxConcurrentCalls="256" maxConcurrentSessions="800" />
				</behavior>
				<!-- Si algún servicio fuese solo TCP, usarías este -->
				<behavior name="ServiceBehaviorTcpOnly">
					<serviceMetadata httpGetEnabled="false" />
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceThrottling maxConcurrentCalls="256" maxConcurrentSessions="800" />
				</behavior>
			</serviceBehaviors>
		</behaviors>

		<services>
			<!-- AuthService -->
			<service name="SnakesAndLadders.Services.Wcf.AuthService"
					 behaviorConfiguration="ServiceBehaviorHttp">
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:8085/auth/"/>
						<add baseAddress="net.tcp://localhost:8095/auth/"/>
					</baseAddresses>
				</host>
				<endpoint address="" binding="basicHttpBinding"
						  contract="SnakeAndLadders.Contracts.Services.IAuthService" />
				<endpoint address="" binding="netTcpBinding"
						  contract="SnakeAndLadders.Contracts.Services.IAuthService" />
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
				<endpoint address="mex" binding="mexTcpBinding"  contract="IMetadataExchange" />
			</service>

			<!-- UserService -->
			<service name="SnakesAndLadders.Services.Wcf.UserService"
					 behaviorConfiguration="ServiceBehaviorHttp">
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:8085/user/"/>
						<add baseAddress="net.tcp://localhost:8095/user/"/>
					</baseAddresses>
				</host>
				<endpoint address="" binding="basicHttpBinding"
						  contract="SnakeAndLadders.Contracts.Services.IUserService" />
				<endpoint address="" binding="netTcpBinding"
						  contract="SnakeAndLadders.Contracts.Services.IUserService" />
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
				<endpoint address="mex" binding="mexTcpBinding"  contract="IMetadataExchange" />
			</service>

			<!-- LobbyService -->
			<service name="SnakesAndLadders.Services.Wcf.LobbyService"
					 behaviorConfiguration="ServiceBehaviorHttp">
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:8085/lobby/"/>
						<add baseAddress="net.tcp://localhost:8095/lobby/"/>
					</baseAddresses>
				</host>
				<endpoint address="" binding="basicHttpBinding"
						  contract="SnakeAndLadders.Contracts.Services.ILobbyService" />
				<endpoint address="" binding="netTcpBinding"
						  contract="SnakeAndLadders.Contracts.Services.ILobbyService" />
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
				<endpoint address="mex" binding="mexTcpBinding"  contract="IMetadataExchange" />
			</service>

			<!-- ChatService: HTTP-dual en 8086 + TCP en 8087 (puertos separados) -->
			<service name="SnakesAndLadders.Services.Wcf.ChatService"
					 behaviorConfiguration="ServiceBehaviorHttp">
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:8086/chat/"/>
						<add baseAddress="net.tcp://localhost:8087/chat/"/>
					</baseAddresses>
				</host>

				<!-- HTTP duplex (útil para actualizar referencia) -->
				<endpoint address="" binding="wsDualHttpBinding"
						  bindingConfiguration="WsDualHttpChat"
						  contract="SnakeAndLadders.Contracts.Services.IChatService" />

				<!-- TCP duplex (runtime recomendado) -->
				<endpoint address="" binding="netTcpBinding"
						  bindingConfiguration="NetTcpChat"
						  contract="SnakeAndLadders.Contracts.Services.IChatService" />

				<!-- MEX en ambos protocolos -->
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
				<endpoint address="mex" binding="mexTcpBinding"  contract="IMetadataExchange" />
			</service>

		</services>

		<bindings>
			<netTcpBinding>
				<binding name="NetTcpChat"
						 maxReceivedMessageSize="1048576"
						 receiveTimeout="00:10:00"
						 sendTimeout="00:01:00"
						 openTimeout="00:00:30"
						 closeTimeout="00:00:10">
					<security mode="None" />
				</binding>
			</netTcpBinding>

			<wsDualHttpBinding>
				<binding name="WsDualHttpChat">
					<security mode="None" />
				</binding>
			</wsDualHttpBinding>
		</bindings>
	</system.serviceModel>

	<entityFramework>
		<providers>
			<provider invariantName="System.Data.SqlClient"
					  type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
</configuration>
